{"version":3,"sources":["components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroesByName.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["LoginScreen","history","className","onClick","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","name","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","Navbar","activeClassName","exact","DashboardRoutes","path","component","AppRouter","HeroesApp","ReactDOM","render","document","getElementById"],"mappings":"uKAEaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAM1B,OACI,sBAAKC,UAAU,iBAAf,UACI,6CACA,uBAEA,wBACIA,UAAU,kBACVC,QAXQ,WAChBF,EAAQG,QAAQ,MAQZ,uB,OCbCC,EAAS,CAClB,CACI,GAAM,YACN,UAAa,SACb,UAAa,YACb,UAAa,cACb,iBAAoB,uBACpB,WAAc,eAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,YACb,UAAa,SACb,iBAAoB,mBACpB,WAAc,UAElB,CACI,GAAM,WACN,UAAa,QACb,UAAa,YACb,UAAa,cACb,iBAAoB,kBACpB,WAAc,oDAElB,CACI,GAAM,WACN,UAAa,gBACb,UAAa,YACb,UAAa,aACb,iBAAoB,0BACpB,WAAc,6FAElB,CACI,GAAM,WACN,UAAa,cACb,UAAa,YACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,YACN,UAAa,eACb,UAAa,YACb,UAAa,iBACb,iBAAoB,qBACpB,WAAc,kBAElB,CACI,GAAM,aACN,UAAa,oBACb,UAAa,YACb,UAAa,eACb,iBAAoB,wBACpB,WAAc,qBAElB,CACI,GAAM,WACN,UAAa,kBACb,UAAa,YACb,UAAa,eACb,iBAAoB,uBACpB,WAAc,gBAElB,CACI,GAAM,UACN,UAAa,cACb,UAAa,YACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,qCAElB,CACI,GAAM,WACN,UAAa,eACb,UAAa,YACb,UAAa,cACb,iBAAoB,mBACpB,WAAc,4BAElB,CACI,GAAM,gBACN,UAAa,aACb,UAAa,gBACb,UAAa,eACb,iBAAoB,sBACpB,WAAc,gBAElB,CACI,GAAM,iBACN,UAAa,kBACb,UAAa,gBACb,UAAa,eACb,iBAAoB,4BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,WACb,UAAa,gBACb,UAAa,aACb,iBAAoB,wBACpB,WAAc,cAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,0BACpB,WAAc,gBAElB,CACI,GAAM,cACN,UAAa,OACb,UAAa,gBACb,UAAa,eACb,iBAAoB,yBACpB,WAAc,gBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,2BACpB,WAAc,iBAElB,CACI,GAAM,mBACN,UAAa,YACb,UAAa,gBACb,UAAa,0BACb,iBAAoB,eACpB,WAAc,2BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,yBACb,iBAAoB,wBACpB,WAAc,0BAElB,CACI,GAAM,iBACN,UAAa,UACb,UAAa,gBACb,UAAa,gBACb,iBAAoB,WACpB,WAAc,iBAElB,CACI,GAAM,gBACN,UAAa,gBACb,UAAa,gBACb,UAAa,cACb,iBAAoB,yBACpB,WAAc,gBC5JTC,EAAW,SAAC,GAMlB,IALHC,EAKE,EALFA,GACAC,EAIE,EAJFA,UACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,iBACAC,EACE,EADFA,WAGA,OAEI,qBAAKT,UAAU,YAAYU,MAAO,CAAEC,SAAU,KAA9C,SAEI,sBAAKX,UAAU,iBAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBACIY,IAAG,0BAAsBP,EAAtB,QACHL,UAAU,WACVa,IAAKP,MAIb,qBAAKN,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BM,IAC7B,mBAAGN,UAAU,YAAb,SAA0BO,IAErBA,IAAcE,GAEf,mBAAGT,UAAU,YAAb,SAA0BS,IAG9B,mBAAGT,UAAU,YAAb,SACI,uBAAOA,UAAU,aAAjB,SAA+BQ,MAGnC,cAAC,IAAD,CAAMM,GAAE,iBAAaT,GAArB,gCClCXU,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAGjBb,EAASc,mBAAQ,kBCLS,SAACD,GAIjC,IAFwB,CAAC,YAAa,iBAEjBE,SAASF,GAC1B,MAAM,IAAIG,MAAJ,qBAAyBH,EAAzB,qBAGV,OAAOb,EAAOiB,QAAO,SAAAC,GAAI,OAAIA,EAAKL,YAAcA,KDHnBM,CAAqBN,KAAY,CAACA,IAE/D,OACI,qBAAKhB,UAAU,iDAAf,SAGQG,EAAOoB,KAAI,SAAAF,GAAI,OACX,cAAC,EAAD,eAEQA,GADCA,EAAKhB,UEZrBmB,EAAW,WAEpB,OACI,gCACI,0CACA,uBACA,cAAC,EAAD,CAAUR,UAAU,kBCLnBS,EAAa,SAAC,GAAiB,IAAf1B,EAAc,EAAdA,QAEjB2B,EAAWC,cAAXD,OAEFL,EAAOJ,mBAAQ,kBCNGZ,EDMeqB,ECJhCvB,EAAOyB,MAAK,SAAAP,GAAI,OAAIA,EAAKhB,KAAOA,KAFhB,IAACA,IDMwB,CAACqB,IAEjD,IAAKL,EACD,OAAO,cAAC,IAAD,CAAUP,GAAG,MAGxB,IASIR,EAKAe,EALAf,UACAC,EAIAc,EAJAd,UACAS,EAGAK,EAHAL,UACAR,EAEAa,EAFAb,iBACAC,EACAY,EADAZ,WAGJ,OACI,sBAAKT,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,SACI,qBACIY,IAAG,2BAAuBc,EAAvB,QACHb,IAAKP,EACLN,UAAU,sDAIlB,sBAAKA,UAAU,QAAf,UACI,6BAAKM,IACL,qBAAIN,UAAU,8BAAd,UACI,qBAAIA,UAAU,kBAAd,UAAgC,6CAAhC,IAAqDO,KACrD,qBAAIP,UAAU,kBAAd,UAAgC,6CAAhC,IAAqDgB,KACrD,qBAAIhB,UAAU,kBAAd,UAAgC,oDAAhC,IAA4DQ,QAGhE,6BAAI,+CACJ,4BAAIC,IAEJ,wBACIT,UAAU,uBACVC,QAvCK,WACbF,EAAQ8B,QAAU,EAClB9B,EAAQ+B,KAAK,KAEb/B,EAAQgC,UAiCJ,2BEhDHC,EAAe,WAExB,OACI,gCACI,8CACA,uBAEA,cAAC,EAAD,CAAUhB,UAAU,sB,iCCHnBiB,EAAe,SAAC,GAAiB,IAAflC,EAAc,EAAdA,QAErBmC,EAAWC,cAFwB,EAGtBC,IAAYC,MAAMH,EAASI,QAAtCC,SAHiC,MAG7B,GAH6B,ICLtB,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAGdC,mBAASD,GAHK,mBAGnCE,EAHmC,KAG3BC,EAH2B,KAmB1C,MAAO,CACHD,EAdsB,SAAC,GAAgB,IAAdE,EAAa,EAAbA,OAEzBD,EAAU,2BACHD,GADE,kBAEJE,EAAOC,KAAOD,EAAOE,UAKhB,WACVH,EAAUH,KDN0BO,CAAQ,CAC5CC,WAAYT,IANyB,mBAKlCU,EALkC,KAKtBC,EALsB,KAQjCF,EAAeC,EAAfD,WAEFG,EAAiBlC,mBAAQ,kBEdJ,WAAgB,IAAf4B,EAAc,uDAAP,GAEnC,MAAa,KAATA,EACO,IAGXA,EAAOA,EAAKO,oBACLjD,EAAOiB,QAAO,SAAAC,GAAI,OAAIA,EAAKf,UAAU8C,oBAAoBlC,SAAS2B,OFOpCQ,CAAgBd,KAAI,CAACA,IAQ1D,OACI,gCACI,8CACA,uBAEA,sBAAKvC,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,UAEI,6CACA,uBAEA,uBAAMsD,SAhBD,SAACC,GAClBA,EAAEC,iBACFzD,EAAQ+B,KAAR,aAAoBkB,KAcR,UACI,uBACIS,KAAK,OACLC,YAAY,oBACZ1D,UAAU,eACV6C,KAAK,aACLc,aAAa,MACbb,MAAOE,EACPY,SAAUV,IAGd,wBACIO,KAAK,SACLzD,UAAU,wCAFd,0BAWR,sBAAKA,UAAU,QAAf,UAEI,2CACA,uBAGW,KAANuC,GAED,qBAAKvC,UAAU,mBAAf,2BAMO,KAANuC,GAAsC,IAA1BY,EAAetB,QAE5B,sBAAK7B,UAAU,qBAAf,UACI,2DADJ,KACwCuC,EADxC,OAMAY,EAAe5B,KAAI,SAAAF,GAAI,OACnB,cAAC,EAAD,eAEQA,GADCA,EAAKhB,iBG/E7BwD,EAAS,WAClB,OACI,sBAAK7D,UAAU,8CAAf,UAEI,cAAC,IAAD,CACIA,UAAU,eACVc,GAAG,IAFP,0BAOA,qBAAKd,UAAU,kBAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,cAAC,IAAD,CACI8D,gBAAgB,SAChB9D,UAAU,oBACV+D,OAAK,EACLjD,GAAG,UAJP,oBASA,cAAC,IAAD,CACIgD,gBAAgB,SAChB9D,UAAU,oBACV+D,OAAK,EACLjD,GAAG,MAJP,gBASA,cAAC,IAAD,CACIgD,gBAAgB,SAChB9D,UAAU,oBACV+D,OAAK,EACLjD,GAAG,UAJP,yBAYR,qBAAKd,UAAU,+CAAf,SACI,oBAAIA,UAAU,qBAAd,SACI,cAAC,IAAD,CACI8D,gBAAgB,SAChB9D,UAAU,oBACV+D,OAAK,EACLjD,GAAG,SAJP,4BCzCPkD,EAAkB,WAC3B,OACI,qCACI,cAAC,EAAD,IAEA,qBAAKhE,UAAU,iBAAf,SACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAO+D,OAAK,EAACE,KAAK,MAAMC,UAAW1C,IACnC,cAAC,IAAD,CAAOuC,OAAK,EAACE,KAAK,UAAUC,UAAWlC,IACvC,cAAC,IAAD,CAAO+B,OAAK,EAACE,KAAK,gBAAgBC,UAAWzC,IAC7C,cAAC,IAAD,CAAOsC,OAAK,EAACE,KAAK,UAAUC,UAAWjC,IACvC,cAAC,IAAD,CAAUnB,GAAG,eCVpBqD,EAAY,WACrB,OACI,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOJ,OAAK,EAACE,KAAK,SAASC,UAAWpE,IAEtC,cAAC,IAAD,CAAOmE,KAAK,IAAIC,UAAWF,YCdlCI,EAAY,WACrB,OACI,cAAC,EAAD,KCDRC,IAASC,OAAO,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.68e34d2a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    const handleLogin = () => {\r\n        history.replace('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>LoginScreen</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={handleLogin}\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero': 'Batman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Bruce Wayne',\r\n        'first_appearance': 'Detective Comics #27',\r\n        'characters': 'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero': 'Superman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Kal-El',\r\n        'first_appearance': 'Action Comics #1',\r\n        'characters': 'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero': 'Flash',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Jay Garrick',\r\n        'first_appearance': 'Flash Comics #1',\r\n        'characters': 'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero': 'Green Lantern',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Alan Scott',\r\n        'first_appearance': 'All-American Comics #16',\r\n        'characters': 'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero': 'Green Arrow',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Oliver Queen',\r\n        'first_appearance': 'More Fun Comics #73',\r\n        'characters': 'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero': 'Wonder Woman',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Princess Diana',\r\n        'first_appearance': 'All Star Comics #8',\r\n        'characters': 'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero': 'Martian Manhunter',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'J\\'onn J\\'onzz',\r\n        'first_appearance': 'Detective Comics #225',\r\n        'characters': 'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero': 'Robin/Nightwing',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dick Grayson',\r\n        'first_appearance': 'Detective Comics #38',\r\n        'characters': 'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero': 'Blue Beetle',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dan Garret',\r\n        'first_appearance': 'Mystery Men Comics #1',\r\n        'characters': 'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero': 'Black Canary',\r\n        'publisher': 'DC Comics',\r\n        'alter_ego': 'Dinah Drake',\r\n        'first_appearance': 'Flash Comics #86',\r\n        'characters': 'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero': 'Spider Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Peter Parker',\r\n        'first_appearance': 'Amazing Fantasy #15',\r\n        'characters': 'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero': 'Captain America',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Steve Rogers',\r\n        'first_appearance': 'Captain America Comics #1',\r\n        'characters': 'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero': 'Iron Man',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Tony Stark',\r\n        'first_appearance': 'Tales of Suspense #39',\r\n        'characters': 'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero': 'Thor',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Thor Odinson',\r\n        'first_appearance': 'Journey into Myster #83',\r\n        'characters': 'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero': 'Hulk',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Bruce Banner',\r\n        'first_appearance': 'The Incredible Hulk #1',\r\n        'characters': 'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero': 'Wolverine',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'James Howlett',\r\n        'first_appearance': 'The Incredible Hulk #180',\r\n        'characters': 'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero': 'Daredevil',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Matthew Michael Murdock',\r\n        'first_appearance': 'Daredevil #1',\r\n        'characters': 'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero': 'Hawkeye',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Clinton Francis Barton',\r\n        'first_appearance': 'Tales of Suspense #57',\r\n        'characters': 'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero': 'Cyclops',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Scott Summers',\r\n        'first_appearance': 'X-Men #1',\r\n        'characters': 'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero': 'Silver Surfer',\r\n        'publisher': 'Marvel Comics',\r\n        'alter_ego': 'Norrin Radd',\r\n        'first_appearance': 'The Fantastic Four #48',\r\n        'characters': 'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n\r\n    return (\r\n\r\n        <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\r\n\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img\r\n                        src={`./assets/heroes/${ id }.jpg`}\r\n                        className=\"card-img\"\r\n                        alt={superhero}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-tittle\">{superhero}</h5>\r\n                        <p className=\"card-text\">{alter_ego}</p>\r\n                        {\r\n                            (alter_ego !== characters)\r\n                            &&\r\n                            <p className=\"card-text\">{characters}</p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\">{first_appearance}</small>\r\n                        </p>\r\n\r\n                        <Link to={`./hero/${ id }`}>\r\n                            More...\r\n                        </Link>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n    // useMemo makes the re-render only if the publisher has changed\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__zoomIn\">\r\n            {\r\n\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero}\r\n                    />\r\n\r\n                ))\r\n\r\n            }\r\n        </div >\r\n    )\r\n}\r\n","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByPublisher = (publisher) => {\r\n\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!validPublishers.includes(publisher)) {\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`);\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n\r\n}","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const DcScreen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>DcScreen</h1>\r\n            <hr />\r\n            <HeroList publisher='DC Comics' />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    const { heroId } = useParams();\r\n\r\n    const hero = useMemo(() => getHeroById(heroId), [heroId]);\r\n\r\n    if (!hero) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        if (history.length <= 2) {\r\n            history.push('/');\r\n        } else {\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        alter_ego,\r\n        publisher,\r\n        first_appearance,\r\n        characters,\r\n    } = hero;\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    src={`../assets/heroes/${ heroId }.jpg`}\r\n                    alt={superhero}\r\n                    className=\"img-thumbnail animate__animated animate__zoomIn\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8\">\r\n                <h3>{superhero}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego : </b> {alter_ego}</li>\r\n                    <li className=\"list-group-item\"><b>Publisher : </b> {publisher}</li>\r\n                    <li className=\"list-group-item\"><b>First appearance : </b> {first_appearance}</li>\r\n                </ul>\r\n\r\n                <h5><b>Characters :</b></h5>\r\n                <p>{characters}</p>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n    return heroes.find(hero => hero.id === id);\r\n\r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n\r\n    return (\r\n        <div>\r\n            <h1>MarvelScreen</h1>\r\n            <hr />\r\n\r\n            <HeroList publisher='Marvel Comics' />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n    const { q = '' } = queryString.parse(location.search);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        searchText: q\r\n    });\r\n    const { searchText } = formValues;\r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName(q), [q])\r\n\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        history.push(`?q=${ searchText }`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>SearchScreen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n\r\n                    <h4>Search form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero...\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={searchText}\r\n                            onChange={handleInputChange}\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search\r\n                        </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n\r\n                    <h4>Results :</h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                            Search a hero\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            <b>There is no a hero called:</b> \"{q}\"\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map(hero => (\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    // Initial state passed\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    // Function to uptade values in state\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    };\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    return [\r\n        values,\r\n        handleInputChange,\r\n        reset\r\n    ];\r\n\r\n};","import { heroes } from '../data/heroes';\r\n\r\n\r\nexport const getHeroesByName = (name = '') => {\r\n\r\n    if (name === '') {\r\n        return [];\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter(hero => hero.superhero.toLocaleLowerCase().includes(name));\r\n\r\n}\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n\r\n            <Link\r\n                className=\"navbar-brand\"\r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/login\"\r\n                    >\r\n                        Logout\r\n                    </NavLink>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n};","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/dc\" component={DcScreen} />\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n                    <Route exact path=\"/hero/:heroId\" component={HeroScreen} />\r\n                    <Route exact path=\"/search\" component={SearchScreen} />\r\n                    <Redirect to='/' />\r\n\r\n                </Switch>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/login\" component={LoginScreen} />\r\n\r\n                    <Route path=\"/\" component={DashboardRoutes} />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const HeroesApp = () => {\r\n    return (\r\n        <AppRouter />\r\n    )\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(<HeroesApp />, document.getElementById('root'));\n"],"sourceRoot":""}